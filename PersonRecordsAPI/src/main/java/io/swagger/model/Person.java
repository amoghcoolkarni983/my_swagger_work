/*
 * Patient Records API
 * Patient Api to Search, Update and Delete patient record.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: amogh.kulkarni@cerner.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Person
 */

public class Person {
	@JsonProperty("PERSON_ID")
	private String PERSON_ID = null;

	@JsonProperty("FIRST_NAME")
	private String FIRST_NAME = null;

	@JsonProperty("LAST_NAME")
	private String LAST_NAME = null;

	@JsonProperty("MOBILE")
	private String MOBILE = null;

	@JsonProperty("BIRTH_DATE")
	private Date BIRTH_DATE = null;

	@JsonProperty("GENDER")
	private String GENDER = null;

	@JsonProperty("MARITAL_STATUS")
	private String MARITAL_STATUS = null;

	@JsonProperty("RELIGION")
	private String RELIGION = null;

	@JsonProperty("ADDRESS")
	private String ADDRESS = null;

	public Person PERSON_ID(String PERSON_ID) {
		this.PERSON_ID = PERSON_ID;
		return this;
	}

	/**
	 * Get PERSON_ID
	 * 
	 * @return PERSON_ID
	 **/
	@JsonProperty("PERSON_ID")
	@ApiModelProperty(value = "")
	public String getPERSONID() {
		return PERSON_ID;
	}

	public void setPERSONID(String PERSON_ID) {
		this.PERSON_ID = PERSON_ID;
	}

	public Person FIRST_NAME(String FIRST_NAME) {
		this.FIRST_NAME = FIRST_NAME;
		return this;
	}

	/**
	 * Get FIRST_NAME
	 * 
	 * @return FIRST_NAME
	 **/
	@JsonProperty("FIRST_NAME")
	@ApiModelProperty(value = "")
	public String getFIRSTNAME() {
		return FIRST_NAME;
	}

	public void setFIRSTNAME(String FIRST_NAME) {
		this.FIRST_NAME = FIRST_NAME;
	}

	public Person LAST_NAME(String LAST_NAME) {
		this.LAST_NAME = LAST_NAME;
		return this;
	}

	/**
	 * Get LAST_NAME
	 * 
	 * @return LAST_NAME
	 **/
	@JsonProperty("LAST_NAME")
	@ApiModelProperty(value = "")
	public String getLASTNAME() {
		return LAST_NAME;
	}

	public void setLASTNAME(String LAST_NAME) {
		this.LAST_NAME = LAST_NAME;
	}

	public Person MOBILE(String MOBILE) {
		this.MOBILE = MOBILE;
		return this;
	}

	/**
	 * Get MOBILE
	 * 
	 * @return MOBILE
	 **/
	@JsonProperty("MOBILE")
	@ApiModelProperty(value = "")
	public String getMOBILE() {
		return MOBILE;
	}

	public void setMOBILE(String MOBILE) {
		this.MOBILE = MOBILE;
	}

	public Person BIRTH_DATE(Date BIRTH_DATE) {
		this.BIRTH_DATE = BIRTH_DATE;
		return this;
	}

	/**
	 * Get BIRTH_DATE
	 * 
	 * @return BIRTH_DATE
	 **/
	@JsonProperty("BIRTH_DATE")
	@ApiModelProperty(value = "")
	public Date getBIRTHDATE() {
		return BIRTH_DATE;
	}

	public void setBIRTHDATE(Date BIRTH_DATE) {
		this.BIRTH_DATE = BIRTH_DATE;
	}

	public Person GENDER(String GENDER) {
		this.GENDER = GENDER;
		return this;
	}

	/**
	 * Get GENDER
	 * 
	 * @return GENDER
	 **/
	@JsonProperty("GENDER")
	@ApiModelProperty(value = "")
	public String getGENDER() {
		return GENDER;
	}

	public void setGENDER(String GENDER) {
		this.GENDER = GENDER;
	}

	public Person MARITAL_STATUS(String MARITAL_STATUS) {
		this.MARITAL_STATUS = MARITAL_STATUS;
		return this;
	}

	/**
	 * Get MARITAL_STATUS
	 * 
	 * @return MARITAL_STATUS
	 **/
	@JsonProperty("MARITAL_STATUS")
	@ApiModelProperty(value = "")
	public String getMARITALSTATUS() {
		return MARITAL_STATUS;
	}

	public void setMARITALSTATUS(String MARITAL_STATUS) {
		this.MARITAL_STATUS = MARITAL_STATUS;
	}

	public Person RELIGION(String RELIGION) {
		this.RELIGION = RELIGION;
		return this;
	}

	/**
	 * Get RELIGION
	 * 
	 * @return RELIGION
	 **/
	@JsonProperty("RELIGION")
	@ApiModelProperty(value = "")
	public String getRELIGION() {
		return RELIGION;
	}

	public void setRELIGION(String RELIGION) {
		this.RELIGION = RELIGION;
	}

	public Person ADDRESS(String ADDRESS) {
		this.ADDRESS = ADDRESS;
		return this;
	}

	/**
	 * Get ADDRESS
	 * 
	 * @return ADDRESS
	 **/
	@JsonProperty("ADDRESS")
	@ApiModelProperty(value = "")
	public String getADDRESS() {
		return ADDRESS;
	}

	public void setADDRESS(String ADDRESS) {
		this.ADDRESS = ADDRESS;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Person person = (Person) o;
		return Objects.equals(this.PERSON_ID, person.PERSON_ID) && Objects.equals(this.FIRST_NAME, person.FIRST_NAME)
				&& Objects.equals(this.LAST_NAME, person.LAST_NAME) && Objects.equals(this.MOBILE, person.MOBILE)
				&& Objects.equals(this.BIRTH_DATE, person.BIRTH_DATE) && Objects.equals(this.GENDER, person.GENDER)
				&& Objects.equals(this.MARITAL_STATUS, person.MARITAL_STATUS)
				&& Objects.equals(this.RELIGION, person.RELIGION) && Objects.equals(this.ADDRESS, person.ADDRESS);
	}

	@Override
	public int hashCode() {
		return Objects.hash(PERSON_ID, FIRST_NAME, LAST_NAME, MOBILE, BIRTH_DATE, GENDER, MARITAL_STATUS, RELIGION,
				ADDRESS);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Person {\n");

		sb.append("    PERSON_ID: ").append(toIndentedString(PERSON_ID)).append("\n");
		sb.append("    FIRST_NAME: ").append(toIndentedString(FIRST_NAME)).append("\n");
		sb.append("    LAST_NAME: ").append(toIndentedString(LAST_NAME)).append("\n");
		sb.append("    MOBILE: ").append(toIndentedString(MOBILE)).append("\n");
		sb.append("    BIRTH_DATE: ").append(toIndentedString(BIRTH_DATE)).append("\n");
		sb.append("    GENDER: ").append(toIndentedString(GENDER)).append("\n");
		sb.append("    MARITAL_STATUS: ").append(toIndentedString(MARITAL_STATUS)).append("\n");
		sb.append("    RELIGION: ").append(toIndentedString(RELIGION)).append("\n");
		sb.append("    ADDRESS: ").append(toIndentedString(ADDRESS)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
